with(data_bs_sum, data.frame(rsq, adjr2, cp, rss, outmat))
#chcemy większe rsq, adjr2 oraz mniejsze cp, rss
data_bs_sum$cp
bic_min <- which.min(data_bs_sum$bic)
bic_min
data_bs_sum$bic[bic_min]
aic_min <- which.min(data_bs_sum$aic)
aic_min
data_bs_sum$aic[aic_min]
aic_min <- which.min(data_bs_sum$aic)
aic_min
data_bs <- regsubsets(Life.expectancy ~ .,data = data[,-20], nvmax = 20, method = "exhaustive")
data_bs_sum <- summary(data_bs)
with(data_bs_sum, data.frame(rsq, adjr2, cp, rss, outmat))
#chcemy większe rsq, adjr2 oraz mniejsze cp, rss
#chcemy jak najmniejsze BIC i AIC
aic_min <- which.min(data_bs_sum$aic)
aic_min
data_bs_sum$aic[aic_min]
which.min(data_bs_sum$aic)
which.min(data_bs_sum$bic)
plot(data_bs_sum$bic, xlab = "Liczba zmiennych", ylab = "BIC", col = "green",
type = "b", pch = 20)
points(bic_min, data_bs_sum$bic[bic_min], col = "red", pch = 9)
bic_min <- which.min(data_bs_sum$bic)
bic_min
data_bs_sum$bic[bic_min]
plot(data_bs_sum$bic, xlab = "Number of variables", ylab = "BIC", col = "green",
type = "b", pch = 20)
points(bic_min, data_bs_sum$bic[bic_min], col = "red", pch = 9)
plot(data_bs, scale = "bic")
coef(data_bs, id = 9)
aic_min <- which.max(data_bs_sum$rsq)
aic_min
data_bs_sum$rsq[aic_min]
rsq_max <- which.max(data_bs_sum$rsq)
rsq_max
data_bs_sum$rsq[rsq_max]
plot(data_bs_sum$rsq, xlab = "Number of variables", ylab = "RSQ", col = "green",
type = "b", pch = 20)
points(rsq_max, data_bs_sum$rsq[rsq_max], col = "red", pch = 9)
adjr_max <- which.max(data_bs_sum$adjr)
adjr_max <- which.max(data_bs_sum$adjr)
adjr_max
data_bs_sum$adjr[adjr_max]
plot(data_bs_sum$adjr, xlab = "Number of variables", ylab = "ADJR", col = "green",
type = "b", pch = 20)
points(adjr_max, data_bs_sum$adjr[adjr_max], col = "red", pch = 9)
cp_min <- which.max(data_bs_sum$cp)
cp_min
data_bs_sum$cp[cp_min]
plot(data_bs_sum$cp, xlab = "Number of variables", ylab = "CP", col = "green",
type = "b", pch = 20)
points(cp_min, data_bs_sum$cp[cp_min], col = "red", pch = 9)
rsq_max <- which.min(data_bs_sum$rsq)
rsq_max
data_bs_sum$rsq[rsq_max]
plot(data_bs_sum$rsq, xlab = "Number of variables", ylab = "RSQ", col = "green",
type = "b", pch = 20)
points(rsq_max, data_bs_sum$rsq[rsq_max], col = "red", pch = 9)
rsq_max <- which.max(data_bs_sum$rsq)
rsq_max
data_bs_sum$rsq[rsq_max]
plot(data_bs_sum$rsq, xlab = "Number of variables", ylab = "RSQ", col = "green",
type = "b", pch = 20)
points(rsq_max, data_bs_sum$rsq[rsq_max], col = "red", pch = 9)
cp_min <- which.min(data_bs_sum$cp)
cp_min
data_bs_sum$cp[cp_min]
plot(data_bs_sum$cp, xlab = "Number of variables", ylab = "CP", col = "green",
type = "b", pch = 20)
points(cp_min, data_bs_sum$cp[cp_min], col = "red", pch = 9)
coef(data_bs, id = 12)
data_bs <- regsubsets(Life.expectancy ~ .,data = data[,-20], nvmax = 10, method = "exhaustive")
data_bs_sum <- summary(data_bs)
with(data_bs_sum, data.frame(rsq, adjr2, cp, rss, outmat))
#chcemy większe rsq, adjr2 oraz mniejsze cp, rss
#chcemy jak najmniejsze BIC i AIC
bic_min <- which.min(data_bs_sum$bic)
bic_min
data_bs_sum$bic[bic_min]
plot(data_bs_sum$bic, xlab = "Number of variables", ylab = "BIC", col = "green",
type = "b", pch = 20)
points(bic_min, data_bs_sum$bic[bic_min], col = "red", pch = 9)
rsq_max <- which.max(data_bs_sum$rsq)
rsq_max
data_bs_sum$rsq[rsq_max]
plot(data_bs_sum$rsq, xlab = "Number of variables", ylab = "RSQ", col = "green",
type = "b", pch = 20)
points(rsq_max, data_bs_sum$rsq[rsq_max], col = "red", pch = 9)
adjr_max <- which.max(data_bs_sum$adjr)
adjr_max
data_bs_sum$adjr[adjr_max]
plot(data_bs_sum$adjr, xlab = "Number of variables", ylab = "ADJR", col = "green",
type = "b", pch = 20)
points(adjr_max, data_bs_sum$adjr[adjr_max], col = "red", pch = 9)
cp_min <- which.min(data_bs_sum$cp)
cp_min
data_bs_sum$cp[cp_min]
plot(data_bs_sum$cp, xlab = "Number of variables", ylab = "CP", col = "green",
type = "b", pch = 20)
points(cp_min, data_bs_sum$cp[cp_min], col = "red", pch = 9)
plot(data_bs, scale = "bic")
coef(data_bs, id = 12)
data_fwd <- regsubsets(Life.expectancy ~ .,data = data[,-20], nvmax = 15, method = "forward")
data_sum_fwd <- summary(data_fwd)
data_sum_fwd
data_fwd <- regsubsets(Life.expectancy ~ .,data = data[,-20], nvmax = 15, method = "forward")
data_sum_fwd <- summary(data_fwd)
with(data_sum_fwd, data.frame(rsq, adjr2, cp, rss, outmat))
data_bwd <- regsubsets(Life.expectancy ~ .,data = data[,-20], nvmax = 15, method = "forward")
data_sum_bwd <- summary(data_bwd)
with(data_sum_bwd, data.frame(rsq, adjr2, cp, rss, outmat))
bic_min <- which.min(data_sum_fwd$bic)
bic_min
data_sum_fwd$bic[bic_min]
plot(data_sum_fwd$bic, xlab = "Number of variables", ylab = "BIC", col = "green",
type = "b", pch = 20)
points(bic_min, data_sum_fwd$bic[bic_min], col = "red", pch = 9)
#RSQ
cp_min <- which.min(data_sum_fwd$cp)
cp_min
data_sum_fwd$cp[cp_min]
plot(data_sum_fwd$cp, xlab = "Number of variables", ylab = "CP", col = "green",
type = "b", pch = 20)
points(cp_min, data_sum_fwd$cp[cp_min], col = "red", pch = 9)
#AJDR
adjr_max <- which.max(data_sum_fwd$adjr)
adjr_max
data_sum_fwd$adjr[adjr_max]
plot(data_sum_fwd$adjr, xlab = "Number of variables", ylab = "ADJR", col = "green",
type = "b", pch = 20)
points(adjr_max, data_sum_fwd$adjr[adjr_max], col = "red", pch = 9)
# BIC
bic_min <- which.min(data_sum_bwd$bic)
bic_min
data_sum_bwd$bic[bic_min]
plot(data_sum_bwd$bic, xlab = "Number of variables", ylab = "BIC", col = "green",
type = "b", pch = 20)
points(bic_min, data_sum_bwd$bic[bic_min], col = "red", pch = 9)
#RSQ
cp_min <- which.min(data_sum_bwd$cp)
cp_min
data_sum_bwd$cp[cp_min]
plot(data_sum_bwd$cp, xlab = "Number of variables", ylab = "CP", col = "green",
type = "b", pch = 20)
points(cp_min, data_sum_bwd$cp[cp_min], col = "red", pch = 9)
#AJDR
adjr_max <- which.max(data_sum_bwd$adjr)
adjr_max
data_sum_bwd$adjr[adjr_max]
plot(data_sum_bwd$adjr, xlab = "Number of variables", ylab = "ADJR", col = "green",
type = "b", pch = 20)
points(adjr_max, data_sum_bwd$adjr[adjr_max], col = "red", pch = 9)
#AJDR
adjr_max <- which.max(data_sum_fwd$adjr)
adjr_max
data_sum_fwd$adjr[adjr_max]
plot(data_sum_fwd$adjr, xlab = "Number of variables", ylab = "ADJR", col = "green",
type = "b", pch = 20)
points(adjr_max, data_sum_fwd$adjr[adjr_max], col = "red", pch = 9)
data_fwd <- regsubsets(Life.expectancy ~ .,data = data[,-20], nvmax = 15, method = "forward")
data_sum_fwd <- summary(data_fwd)
with(data_sum_fwd, data.frame(rsq, adjr2, cp, rss, outmat))
# BIC
bic_min <- which.min(data_sum_fwd$bic)
bic_min
data_sum_fwd$bic[bic_min]
plot(data_sum_fwd$bic, xlab = "Number of variables", ylab = "BIC", col = "green",
type = "b", pch = 20)
points(bic_min, data_sum_fwd$bic[bic_min], col = "red", pch = 9)
#RSQ
cp_min <- which.min(data_sum_fwd$cp)
cp_min
data_sum_fwd$cp[cp_min]
plot(data_sum_fwd$cp, xlab = "Number of variables", ylab = "CP", col = "green",
type = "b", pch = 20)
points(cp_min, data_sum_fwd$cp[cp_min], col = "red", pch = 9)
#RSQ
cp_min <- which.min(data_sum_fwd$cp)
cp_min
data_sum_fwd$cp[cp_min]
plot(data_sum_fwd$cp, xlab = "Number of variables", ylab = "CP", col = "green",
type = "b", pch = 20)
points(cp_min, data_sum_fwd$cp[cp_min], col = "red", pch = 9)
#AJDR
adjr_max <- which.max(data_sum_fwd$adjr)
adjr_max
data_sum_fwd$adjr[adjr_max]
plot(data_sum_fwd$adjr, xlab = "Number of variables", ylab = "ADJR", col = "green",
type = "b", pch = 20)
points(adjr_max, data_sum_fwd$adjr[adjr_max], col = "red", pch = 9)
data_bwd <- regsubsets(Life.expectancy ~ .,data = data[,-20], nvmax = 15, method = "backward")
data_sum_bwd <- summary(data_bwd)
with(data_sum_bwd, data.frame(rsq, adjr2, cp, rss, outmat))
# BIC
bic_min <- which.min(data_sum_bwd$bic)
bic_min
data_sum_bwd$bic[bic_min]
plot(data_sum_bwd$bic, xlab = "Number of variables", ylab = "BIC", col = "green",
type = "b", pch = 20)
points(bic_min, data_sum_bwd$bic[bic_min], col = "red", pch = 9)
#RSQ
cp_min <- which.min(data_sum_bwd$cp)
cp_min
data_sum_bwd$cp[cp_min]
plot(data_sum_bwd$cp, xlab = "Number of variables", ylab = "CP", col = "green",
type = "b", pch = 20)
points(cp_min, data_sum_bwd$cp[cp_min], col = "red", pch = 9)
#AJDR
adjr_max <- which.max(data_sum_bwd$adjr)
adjr_max
data_sum_bwd$adjr[adjr_max]
plot(data_sum_bwd$adjr, xlab = "Number of variables", ylab = "ADJR", col = "green",
type = "b", pch = 20)
points(adjr_max, data_sum_bwd$adjr[adjr_max], col = "red", pch = 9)
#RSQ
cp_min <- which.min(data_sum_bwd$cp)
cp_min
data_sum_bwd$cp[cp_min]
plot(data_sum_bwd$cp, xlab = "Number of variables", ylab = "CP", col = "green",
type = "b", pch = 20)
points(cp_min, data_sum_bwd$cp[cp_min], col = "red", pch = 9)
data_bs <- regsubsets(Life.expectancy ~ .,data = data[,-20], nvmax = 15, method = "exhaustive")
data_bs_sum <- summary(data_bs)
with(data_bs_sum, data.frame(rsq, adjr2, cp, rss, outmat))
#chcemy większe rsq, adjr2 oraz mniejsze cp, rss
#chcemy jak najmniejsze BIC i AIC
data_bs <- regsubsets(Life.expectancy ~ .,data = data[,-20], nvmax = 18, method = "exhaustive")
data_bs_sum <- summary(data_bs)
with(data_bs_sum, data.frame(rsq, adjr2, cp, rss, outmat))
#chcemy większe rsq, adjr2 oraz mniejsze cp, rss
#chcemy jak najmniejsze BIC i AIC
bic_min <- which.min(data_bs_sum$bic)
bic_min
data_bs_sum$bic[bic_min]
plot(data_bs_sum$bic, xlab = "Number of variables", ylab = "BIC", col = "green",
type = "b", pch = 20)
points(bic_min, data_bs_sum$bic[bic_min], col = "red", pch = 9)
rsq_max <- which.max(data_bs_sum$rsq)
rsq_max
data_bs_sum$rsq[rsq_max]
plot(data_bs_sum$rsq, xlab = "Number of variables", ylab = "RSQ", col = "green",
type = "b", pch = 20)
points(rsq_max, data_bs_sum$rsq[rsq_max], col = "red", pch = 9)
adjr_max <- which.max(data_bs_sum$adjr)
adjr_max
data_bs_sum$adjr[adjr_max]
plot(data_bs_sum$adjr, xlab = "Number of variables", ylab = "ADJR", col = "green",
type = "b", pch = 20)
points(adjr_max, data_bs_sum$adjr[adjr_max], col = "red", pch = 9)
cp_min <- which.min(data_bs_sum$cp)
cp_min
data_bs_sum$cp[cp_min]
plot(data_bs_sum$cp, xlab = "Number of variables", ylab = "CP", col = "green",
type = "b", pch = 20)
points(cp_min, data_bs_sum$cp[cp_min], col = "red", pch = 9)
coef(data_bs, id = 12)
data_fwd <- regsubsets(Life.expectancy ~ .,data = data[,-20], nvmax = 15, method = "forward")
data_sum_fwd <- summary(data_fwd)
with(data_sum_fwd, data.frame(rsq, adjr2, cp, rss, outmat))
data_fwd <- regsubsets(Life.expectancy ~ .,data = data[,-20], nvmax = 18, method = "forward")
data_sum_fwd <- summary(data_fwd)
with(data_sum_fwd, data.frame(rsq, adjr2, cp, rss, outmat))
# BIC
bic_min <- which.min(data_sum_fwd$bic)
bic_min
data_sum_fwd$bic[bic_min]
plot(data_sum_fwd$bic, xlab = "Number of variables", ylab = "BIC", col = "green",
type = "b", pch = 20)
points(bic_min, data_sum_fwd$bic[bic_min], col = "red", pch = 9)
# BIC
bic_min <- which.min(data_sum_fwd$bic)
bic_min
data_sum_fwd$bic[bic_min]
plot(data_sum_fwd$bic, xlab = "Number of variables", ylab = "BIC", col = "green",
type = "b", pch = 20)
points(bic_min, data_sum_fwd$bic[bic_min], col = "red", pch = 9)
#RSQ
cp_min <- which.min(data_sum_fwd$cp)
cp_min
data_sum_fwd$cp[cp_min]
plot(data_sum_fwd$cp, xlab = "Number of variables", ylab = "CP", col = "green",
type = "b", pch = 20)
points(cp_min, data_sum_fwd$cp[cp_min], col = "red", pch = 9)
data_bwd <- regsubsets(Life.expectancy ~ .,data = data[,-20], nvmax = 15, method = "backward")
data_sum_bwd <- summary(data_bwd)
with(data_sum_bwd, data.frame(rsq, adjr2, cp, rss, outmat))
# BIC
bic_min <- which.min(data_sum_bwd$bic)
bic_min
data_sum_bwd$bic[bic_min]
plot(data_sum_bwd$bic, xlab = "Number of variables", ylab = "BIC", col = "green",
type = "b", pch = 20)
points(bic_min, data_sum_bwd$bic[bic_min], col = "red", pch = 9)
#RSQ
cp_min <- which.min(data_sum_bwd$cp)
cp_min
data_sum_bwd$cp[cp_min]
plot(data_sum_bwd$cp, xlab = "Number of variables", ylab = "CP", col = "green",
type = "b", pch = 20)
points(cp_min, data_sum_bwd$cp[cp_min], col = "red", pch = 9)
#AJDR
adjr_max <- which.max(data_sum_bwd$adjr)
adjr_max
data_sum_bwd$adjr[adjr_max]
plot(data_sum_bwd$adjr, xlab = "Number of variables", ylab = "ADJR", col = "green",
type = "b", pch = 20)
points(adjr_max, data_sum_bwd$adjr[adjr_max], col = "red", pch = 9)
knitr::opts_chunk$set(echo = TRUE)
library(corrplot)
library(caret)
library(leaps)
X <- model.matrix(Life.expectancy ~ ., data = data)[, -1]
y <- data$Life.expectancy
lambda_grid <- 10^seq(10, -2, length.out = 100)
fit_ridge <- glmnet(X, y, alpha = 0, lambda = lambda_grid)
install.packages("glmnet")
lambda_grid <- 10^seq(10, -2, length.out = 100)
fit_ridge <- glmnet(X, y, alpha = 0, lambda = lambda_grid)
knitr::opts_chunk$set(echo = TRUE)
library(corrplot)
library(caret)
library(leaps)
library(glmnet)
dim(coef(fit_ridge))
lambda_grid <- 10^seq(10, -2, length.out = 100)
fit_ridge <- glmnet(X, y, alpha = 0, lambda = lambda_grid)
dim(coef(fit_ridge))
lambda_grid <- 10^seq(10, -2, length.out = 100)
print(lambda_grid)
fit_ridge <- glmnet(X, y, alpha = 0, lambda = lambda_grid)
lambda_grid <- 10^seq(10, -2, length.out = 100)
print(lambda_grid)
fit_ridge <- glmnet(X, y, alpha = 0, lambda = lambda_grid)
dim(coef(fit_ridge))
fit_ridge$lambda[50]
coef_ridge <- coef(fit_ridge)[, 50]
coef_ridge
sqrt(sum(coef_ridge[-1]^2))
fit_ridge$lambda[70]
coef(fit_ridge)[, 70]
sqrt(sum(coef(fit_ridge)[-1, 70]^2))
predict(fit_ridge, s = 50, type = "coefficients")
set.seed(1)
n <- nrow(X)
train <- sample(n, n / 2)
test <- -train
fit_ridge <- glmnet(X[train,], y[train], alpha = 0, lambda = lambda_grid,
thresh = 1e-12)
pred_ridge <- predict(fit_ridge, s = 4, newx = X[test,])
mean((pred_ridge - y[test])^2)
mean((pred_null - y[test])^2)
pred_null <- mean(y[train])
mean((pred_null - y[test])^2)
pred_ridge_big <- predict(fit_ridge, s = 1e10, newx = X[test,])
mean((pred_ridge_big - y[test])^2)
pred_ridge_0 <- predict(fit_ridge, x = X[train,], y = y[train], s = 0,
newx = X[test,], exact = TRUE)
mean((pred_ridge_0 - y[test])^2)
predict(fit_ridge, x = X[train,], y = y[train], s = 0, exact = TRUE,
type = "coefficients")[1:20,]
lm(y ~ X, subset = train)
predict(fit_ridge, x = X[train,], y = y[train], s = 0, exact = TRUE,
type = "coefficients")[1:20,]
set.seed(1)
cv_out <- cv.glmnet(X[train,], y[train], alpha = 0)
plot(cv_out)
cv_out$lambda.min
pred_ridge_opt <- predict(fit_ridge, s = cv_out$lambda.min, newx = X[test,])
mean((pred_ridge_opt - y[test])^2)
fit_ridge_full <- glmnet(X, y, alpha = 0)
predict(fit_ridge_full, s = cv_out$lambda.min, type = "coefficients")
coef(fit_ridge)
dim(coef(fit_ridge))
set.seed(1)
n <- nrow(X)
train <- sample(n, n / 2)
test <- -train
fit_ridge <- glmnet(X[train,], y[train], alpha = 0, lambda = lambda_grid,
thresh = 1e-12)
pred_ridge <- predict(fit_ridge, s = 4, newx = X[test,])
mean((pred_ridge - y[test])^2)
set.seed(1)
cv_out <- cv.glmnet(X[train,], y[train], alpha = 0)
plot(cv_out)
cv_out$lambda.min
fit_ridge_full <- glmnet(X, y, alpha = 0)
predict(fit_ridge_full, s = cv_out$lambda.min, type = "coefficients")
data <- data[, -ncol(data)]
X <- model.matrix(Life.expectancy ~ ., data = data)[, -1]
y <- data$Life.expectancy
lambda_grid <- 10^seq(10, -2, length.out = 100)
fit_ridge <- glmnet(X, y, alpha = 0, lambda = lambda_grid)
dim(coef(fit_ridge))
fit_ridge$lambda[50]
coef_ridge <- coef(fit_ridge)[, 50]
sqrt(sum(coef_ridge[-1]^2))
fit_ridge$lambda[70]
coef(fit_ridge)[, 70]
sqrt(sum(coef(fit_ridge)[-1, 70]^2))
set.seed(1)
n <- nrow(X)
train <- sample(n, n / 2)
test <- -train
fit_ridge <- glmnet(X[train,], y[train], alpha = 0, lambda = lambda_grid,
thresh = 1e-12)
pred_ridge <- predict(fit_ridge, s = 4, newx = X[test,])
mean((pred_ridge - y[test])^2)
pred_null <- mean(y[train])
mean((pred_null - y[test])^2)
pred_ridge_big <- predict(fit_ridge, s = 1e10, newx = X[test,])
mean((pred_ridge_big - y[test])^2)
pred_ridge_0 <- predict(fit_ridge, x = X[train,], y = y[train], s = 0,
newx = X[test,], exact = TRUE)
mean((pred_ridge_0 - y[test])^2)
set.seed(1)
cv_out <- cv.glmnet(X[train,], y[train], alpha = 0)
plot(cv_out)
cv_out$lambda.min
pred_ridge_opt <- predict(fit_ridge, s = cv_out$lambda.min, newx = X[test,])
#cv_out$lambda.min, which represents the value of lambda that minimizes the mean cross-validated erro
mean((pred_ridge_opt - y[test])^2)
fit_ridge_full <- glmnet(X, y, alpha = 0)
predict(fit_ridge_full, s = cv_out$lambda.min, type = "coefficients")
cv_out <- cv.glmnet(X[train,], y[train], alpha = 1)
plot(cv_out)
cv_out$lambda.min
pred_lasso <- predict(fit_lasso, s = cv_out$lambda.min, newx = X[test,])
fit_lasso <- glmnet(X[train,], y[train], alpha = 1)
plot(fit_lasso, xvar = "lambda")
cv_out <- cv.glmnet(X[train,], y[train], alpha = 1)
plot(cv_out)
cv_out$lambda.min
pred_lasso <- predict(fit_lasso, s = cv_out$lambda.min, newx = X[test,])
mean((pred_lasso - y[test])^2)
fit_lasso_full <- glmnet(X, y, alpha = 1)
predict(fit_lasso_full, s = cv_out$lambda.min, type = "coefficients")[1:20,]
fit_lasso_full <- glmnet(X, y, alpha = 1)
predict(fit_lasso_full, s = cv_out$lambda.min, type = "coefficients")[1:19,]
fit_lasso_full <- glmnet(X, y, alpha = 1)
predict(fit_lasso_full, s = cv_out$lambda.min, type = "coefficients")
columns(data)
colnames(data)
install.packages("mgcv")
knitr::opts_chunk$set(echo = TRUE)
library(corrplot)
library(caret)
library(leaps)
library(glmnet)
library(mgcv)
gam_model <- gam(Life.expectancy ~ s(Adult.Mortality) + s(infant.deaths) + s(Alcohol) +
s(percentage.expenditure) + s(Hepatitis.B) + s(Measles) + s(BMI) +
s(under.five.deaths) + s(Polio) + s(Total.expenditure) + s(Diphtheria) +
s(HIV.AIDS) + s(GDP) + s(Population) + s(thinness..1.19.years) +
s(thinness.5.9.years) + s(Income.composition.of.resources) + s(Schooling),
data = data)
gam_model <- gam(Life.expectancy ~ . + s(Adult.Mortality, k = seq(1, 10, by = 1)) +
s(infant.deaths, k = seq(1, 10, by = 1)) +
s(Alcohol, k = seq(1, 10, by = 1)) +
s(percentage.expenditure, k = seq(1, 10, by = 1)) +
s(Hepatitis.B, k = seq(1, 10, by = 1)) +
s(Measles, k = seq(1, 10, by = 1)) +
s(BMI, k = seq(1, 10, by = 1)) +
s(under.five.deaths, k = seq(1, 10, by = 1)) +
s(Polio, k = seq(1, 10, by = 1)) +
s(Total.expenditure, k = seq(1, 10, by = 1)) +
s(Diphtheria, k = seq(1, 10, by = 1)) +
s(HIV.AIDS, k = seq(1, 10, by = 1)) +
s(GDP, k = seq(1, 10, by = 1)) +
s(Population, k = seq(1, 10, by = 1)) +
s(thinness..1.19.years, k = seq(1, 10, by = 1)) +
s(thinness.5.9.years, k = seq(1, 10, by = 1)) +
s(Income.composition.of.resources, k = seq(1, 10, by = 1)) +
s(Schooling, k = seq(1, 10, by = 1)),
data = data)
gam_model <- gam(Life.expectancy ~ . + ns(Adult.Mortality, k = seq(1, 10, by = 1)) +
ns(infant.deaths, k = seq(1, 10, by = 1)) +
ns(Alcohol, k = seq(1, 10, by = 1)) +
ns(percentage.expenditure, k = seq(1, 10, by = 1)) +
ns(Hepatitis.B, k = seq(1, 10, by = 1)) +
ns(Measles, k = seq(1, 10, by = 1)) +
ns(BMI, k = seq(1, 10, by = 1)) +
ns(under.five.deaths, k = seq(1, 10, by = 1)) +
ns(Polio, k = seq(1, 10, by = 1)) +
ns(Total.expenditure, k = seq(1, 10, by = 1)) +
ns(Diphtheria, k = seq(1, 10, by = 1)) +
ns(HIV.AIDS, k = seq(1, 10, by = 1)) +
ns(GDP, k = seq(1, 10, by = 1)) +
ns(Population, k = seq(1, 10, by = 1)) +
ns(thinness..1.19.years, k = seq(1, 10, by = 1)) +
ns(thinness.5.9.years, k = seq(1, 10, by = 1)) +
ns(Income.composition.of.resources, k = seq(1, 10, by = 1)) +
ns(Schooling, k = seq(1, 10, by = 1)),
data = data)
gam_model <- gam(Life.expectancy ~ s(Adult.Mortality) + s(infant.deaths) + s(Alcohol) +
s(percentage.expenditure) + s(Hepatitis.B) + s(Measles) + s(BMI) +
s(under.five.deaths) + s(Polio) + s(Total.expenditure) + s(Diphtheria) +
s(HIV.AIDS) + s(GDP) + s(Population) + s(thinness..1.19.years) +
s(thinness.5.9.years) + s(Income.composition.of.resources) + s(Schooling),
data = data)
summary(gam_model)
par(mfrow = c(1, 3))
plot(gam_model, col = "red", se = TRUE)
par(mfrow = c(6, 3))
plot(gam_model, col = "red", se = TRUE)
par(mfrow = c(1, 3))
plot(gam_model, col = "red", se = TRUE)
par(mfrow = c(3, 6))
plot(gam_model, col = "red", se = TRUE)
par(mfrow = c(1, 3))
plot(gam_model, col = "red", se = TRUE)
