r_squared <- 1 - (ss_residual / ss_total)
# Wyświetlanie wyników
cat("Mean Squared Error (MSE):", mse, "\n")
cat("Mean Absolute Error (MAE):", mae, "\n")
cat("R-squared:", r_squared, "\n")
knitr::opts_chunk$set(echo = TRUE)
library(corrplot)
library(caret)
model2 <- lm(train_data$Life.expectancy ~ Adult.Mortality + infant.deaths + Alcohol + percentage.expenditure +
BMI + under.five.deaths + Total.expenditure + Diphtheria + HIV.AIDS + Income.composition.of.resources + Schooling,data = train_data)
summary(model2)
predictions2 <- predict(model2, newdata = test_data)
# Ewaluacja modelu
#mse
mse <- mean((predictions2 - test_data$Life.expectancy)^2)
#mae
mae <- mean(abs(predictions2 - test_data$Life.expectancy))
#R^2
ss_residual <- sum((test_data$Life.expectancy - predictions2)^2)
ss_total <- sum((test_data$Life.expectancy - mean(test_data$Life.expectancy))^2)
r_squared <- 1 - (ss_residual / ss_total)
# Wyświetlanie wyników
cat("Mean Squared Error (MSE):", mse, "\n")
cat("Mean Absolute Error (MAE):", mae, "\n")
cat("R-squared:", r_squared, "\n")
knitr::opts_chunk$set(echo = TRUE)
library(corrplot)
library(caret)
describe(data)
summary(data)
data <- scale(data)
data <- as.data.frame(scale(data))
type(df)
class(df)
class(data)
data <- as.data.frame(scale(data[,-1]))
corrplot(cor(data[,-1]), method = 'color')
install.packages("leaps")
knitr::opts_chunk$set(echo = TRUE)
library(corrplot)
library(caret)
library(leaps)
data <- read.csv("Life-Expectancy-Data.csv")
head(data)
dim(data)
str(data)
names(data)
data <- na.omit(data)
dim(data)
data <- data[, -c(2,1)]
head(data)
summary(data)
data <- as.data.frame(scale(data[,-1]))
cor(data[,-1])
corrplot(cor(data[,-1]), method = 'color')
set.seed(213)
train_indices <- sample(nrow(data), nrow(data) * 0.8)
train_data <- data[train_indices, ]
test_data <- data[-train_indices, ]
model <- lm(train_data$Life.expectancy ~ ., data = train_data)
#model
#model$coefficients
summary(model)
predictions <- predict(model, newdata = test_data)
# Ewaluacja modelu
#mse
mse <- mean((predictions - test_data$Life.expectancy)^2)
#mae
mae <- mean(abs(predictions - test_data$Life.expectancy))
#R^2
ss_residual <- sum((test_data$Life.expectancy - predictions)^2)
ss_total <- sum((test_data$Life.expectancy - mean(test_data$Life.expectancy))^2)
r_squared <- 1 - (ss_residual / ss_total)
# Wyświetlanie wyników
cat("Mean Squared Error (MSE):", mse, "\n")
cat("Mean Absolute Error (MAE):", mae, "\n")
cat("R-squared:", r_squared, "\n")
model2 <- lm(train_data$Life.expectancy ~ Adult.Mortality + infant.deaths + Alcohol + percentage.expenditure +
BMI + under.five.deaths + Total.expenditure + Diphtheria + HIV.AIDS + Income.composition.of.resources + Schooling,data = train_data)
summary(model2)
predictions2 <- predict(model2, newdata = test_data)
# Ewaluacja modelu
#mse
mse <- mean((predictions2 - test_data$Life.expectancy)^2)
#mae
mae <- mean(abs(predictions2 - test_data$Life.expectancy))
#R^2
ss_residual <- sum((test_data$Life.expectancy - predictions2)^2)
ss_total <- sum((test_data$Life.expectancy - mean(test_data$Life.expectancy))^2)
r_squared <- 1 - (ss_residual / ss_total)
# Wyświetlanie wyników
cat("Mean Squared Error (MSE):", mse, "\n")
cat("Mean Absolute Error (MAE):", mae, "\n")
cat("R-squared:", r_squared, "\n")
# Calculate the median of life expectancy
threshold <- mean(data$Life.expectancy)
# Create a new binary variable based on the median threshold
data$Life.expectancy.binary <- ifelse(data$Life.expectancy > threshold, 1, 0)
# split hte data into training and testing
set.seed(213)
train_indices <- sample(nrow(data), nrow(data) * 0.8)
train_data <- data[train_indices, ]
test_data <- data[-train_indices, ]
# Creating the logistic regression model
logistic_model <- glm(Life.expectancy.binary ~ . -Life.expectancy, data = train_data, family = binomial)
# summary of the model
summary(logistic_model)
# Make predictions on the test set
probabilites <- predict(logistic_model, newdata = test_data, type = "response")
predictions <- ifelse(probabilites > 0.5, 1, 0)
# Create a confusion matrix
conf_matrix <- table(Actual = test_data$Life.expectancy.binary, Predicted = predictions)
# Print the confusion matrix
print(conf_matrix)
# Calculate accuracy
accuracy <- sum(predictions == test_data$Life.expectancy.binary) / length(predictions)
# Calculate precision
precision <- conf_matrix[2, 2] / sum(conf_matrix[, 2])
# Calculate recall
recall <- conf_matrix[2, 2] / sum(conf_matrix[2, ])
# Calculate F1-score
f1_score <- 2 * precision * recall / (precision + recall)
cat("Accuracy:", accuracy, "\n")
cat("Precision:", precision, "\n")
cat("Recall:", recall, "\n")
cat("F1-Score:", f1_score, "\n")
# Creating the logistic regression model
logistic_model_2 <- glm(Life.expectancy.binary ~ Adult.Mortality + infant.deaths + percentage.expenditure +
under.five.deaths + Total.expenditure + HIV.AIDS +
thinness..1.19.years + Income.composition.of.resources + Schooling,
data = train_data, family = binomial)
# summary of the model
summary(logistic_model_2)
# Make predictions on the test set
probabilites <- predict(logistic_model_2, newdata = test_data, type = "response")
predictions <- ifelse(probabilites > 0.5, 1, 0)
# Create a confusion matrix
conf_matrix <- table(Actual = test_data$Life.expectancy.binary, Predicted = predictions)
# Print the confusion matrix
print(conf_matrix)
# Calculate accuracy
accuracy <- sum(predictions == test_data$Life.expectancy.binary) / length(predictions)
# Calculate precision
precision <- conf_matrix[2, 2] / sum(conf_matrix[, 2])
# Calculate recall
recall <- conf_matrix[2, 2] / sum(conf_matrix[2, ])
# Calculate F1-score
f1_score <- 2 * precision * recall / (precision + recall)
cat("Accuracy:", accuracy, "\n")
cat("Precision:", precision, "\n")
cat("Recall:", recall, "\n")
cat("F1-Score:", f1_score, "\n")
data
data_bs <- regsubsets(Life.expectancy ~ .,data = data)
summary(data_bs)
data_bs <- regsubsets(Life.expectancy ~ .,data = data, nvmax=3)
data_bs <- regsubsets(Life.expectancy ~ .,data = data, nvmax=3)
summary(data_bs)
data_bs <- regsubsets(Life.expectancy ~ .,data = data[:-1], nvmax=3)
data_bs <- regsubsets(Life.expectancy ~ .,data = data[,-1], nvmax=3)
data_bs <- regsubsets(Life.expectancy ~ .,data = data[,-1], nvmax=3)
data_bs <- regsubsets(Life.expectancy ~ .,data = data, nvmax=3)
summary(data_bs)
shape(data)
dim(data)
data[,-20]
data_bs <- regsubsets(Life.expectancy ~ .,data = data[,-20], nvmax=3)
summary(data_bs)
data_bs <- regsubsets(Life.expectancy ~ .,data = data[,-20])
summary(data_bs)
data_bs <- regsubsets(Life.expectancy ~ .,data = data[,-20])
data_bs_sum <- summary(data_bs)
data_bs_sum$cp
bic_min <- which.min(data_bs_sum$bic)
bic_min <- which.min(data_bs_sum$bic)
bic_min
data_bs <- regsubsets(Life.expectancy ~ .,data = data[,-20], nvmax = 5)
data_bs_sum <- summary(data_bs)
data_bs_sum$cp
bic_min <- which.min(data_bs_sum$bic)
bic_min
bic_min <- which.min(data_bs_sum$bic)
bic_min
data_bs_sum$bic[bic_min]
?regsubsets
with(data_bs_sum, data.frame(rsq, adjr2, cp, rss, outmat))
data_bs <- regsubsets(Life.expectancy ~ .,data = data[,-20], nbest=2, method = "exhaustive")
data_bs_sum <- summary(data_bs)
with(data_bs_sum, data.frame(rsq, adjr2, cp, rss, outmat))
data_bs <- regsubsets(Life.expectancy ~ .,data = data[,-20], method = "exhaustive")
data_bs_sum <- summary(data_bs)
with(data_bs_sum, data.frame(rsq, adjr2, cp, rss, outmat))
#chcemy większe rsq, adjr2 oraz mniejsze cp, rss
data_bs <- regsubsets(Life.expectancy ~ .,data = data[,-20], nvmax = 10, method = "exhaustive")
data_bs_sum <- summary(data_bs)
with(data_bs_sum, data.frame(rsq, adjr2, cp, rss, outmat))
#chcemy większe rsq, adjr2 oraz mniejsze cp, rss
data_bs <- regsubsets(Life.expectancy ~ .,data = data[,-20], nvmax = 15, method = "exhaustive")
data_bs_sum <- summary(data_bs)
with(data_bs_sum, data.frame(rsq, adjr2, cp, rss, outmat))
#chcemy większe rsq, adjr2 oraz mniejsze cp, rss
data_bs <- regsubsets(Life.expectancy ~ .,data = data[,-20], nvmax = 20, method = "exhaustive")
data_bs_sum <- summary(data_bs)
with(data_bs_sum, data.frame(rsq, adjr2, cp, rss, outmat))
#chcemy większe rsq, adjr2 oraz mniejsze cp, rss
data_bs_sum$cp
bic_min <- which.min(data_bs_sum$bic)
bic_min
data_bs_sum$bic[bic_min]
aic_min <- which.min(data_bs_sum$aic)
aic_min
data_bs_sum$aic[aic_min]
aic_min <- which.min(data_bs_sum$aic)
aic_min
data_bs <- regsubsets(Life.expectancy ~ .,data = data[,-20], nvmax = 20, method = "exhaustive")
data_bs_sum <- summary(data_bs)
with(data_bs_sum, data.frame(rsq, adjr2, cp, rss, outmat))
#chcemy większe rsq, adjr2 oraz mniejsze cp, rss
#chcemy jak najmniejsze BIC i AIC
aic_min <- which.min(data_bs_sum$aic)
aic_min
data_bs_sum$aic[aic_min]
which.min(data_bs_sum$aic)
which.min(data_bs_sum$bic)
plot(data_bs_sum$bic, xlab = "Liczba zmiennych", ylab = "BIC", col = "green",
type = "b", pch = 20)
points(bic_min, data_bs_sum$bic[bic_min], col = "red", pch = 9)
bic_min <- which.min(data_bs_sum$bic)
bic_min
data_bs_sum$bic[bic_min]
plot(data_bs_sum$bic, xlab = "Number of variables", ylab = "BIC", col = "green",
type = "b", pch = 20)
points(bic_min, data_bs_sum$bic[bic_min], col = "red", pch = 9)
plot(data_bs, scale = "bic")
coef(data_bs, id = 9)
aic_min <- which.max(data_bs_sum$rsq)
aic_min
data_bs_sum$rsq[aic_min]
rsq_max <- which.max(data_bs_sum$rsq)
rsq_max
data_bs_sum$rsq[rsq_max]
plot(data_bs_sum$rsq, xlab = "Number of variables", ylab = "RSQ", col = "green",
type = "b", pch = 20)
points(rsq_max, data_bs_sum$rsq[rsq_max], col = "red", pch = 9)
adjr_max <- which.max(data_bs_sum$adjr)
adjr_max <- which.max(data_bs_sum$adjr)
adjr_max
data_bs_sum$adjr[adjr_max]
plot(data_bs_sum$adjr, xlab = "Number of variables", ylab = "ADJR", col = "green",
type = "b", pch = 20)
points(adjr_max, data_bs_sum$adjr[adjr_max], col = "red", pch = 9)
cp_min <- which.max(data_bs_sum$cp)
cp_min
data_bs_sum$cp[cp_min]
plot(data_bs_sum$cp, xlab = "Number of variables", ylab = "CP", col = "green",
type = "b", pch = 20)
points(cp_min, data_bs_sum$cp[cp_min], col = "red", pch = 9)
rsq_max <- which.min(data_bs_sum$rsq)
rsq_max
data_bs_sum$rsq[rsq_max]
plot(data_bs_sum$rsq, xlab = "Number of variables", ylab = "RSQ", col = "green",
type = "b", pch = 20)
points(rsq_max, data_bs_sum$rsq[rsq_max], col = "red", pch = 9)
rsq_max <- which.max(data_bs_sum$rsq)
rsq_max
data_bs_sum$rsq[rsq_max]
plot(data_bs_sum$rsq, xlab = "Number of variables", ylab = "RSQ", col = "green",
type = "b", pch = 20)
points(rsq_max, data_bs_sum$rsq[rsq_max], col = "red", pch = 9)
cp_min <- which.min(data_bs_sum$cp)
cp_min
data_bs_sum$cp[cp_min]
plot(data_bs_sum$cp, xlab = "Number of variables", ylab = "CP", col = "green",
type = "b", pch = 20)
points(cp_min, data_bs_sum$cp[cp_min], col = "red", pch = 9)
coef(data_bs, id = 12)
data_bs <- regsubsets(Life.expectancy ~ .,data = data[,-20], nvmax = 10, method = "exhaustive")
data_bs_sum <- summary(data_bs)
with(data_bs_sum, data.frame(rsq, adjr2, cp, rss, outmat))
#chcemy większe rsq, adjr2 oraz mniejsze cp, rss
#chcemy jak najmniejsze BIC i AIC
bic_min <- which.min(data_bs_sum$bic)
bic_min
data_bs_sum$bic[bic_min]
plot(data_bs_sum$bic, xlab = "Number of variables", ylab = "BIC", col = "green",
type = "b", pch = 20)
points(bic_min, data_bs_sum$bic[bic_min], col = "red", pch = 9)
rsq_max <- which.max(data_bs_sum$rsq)
rsq_max
data_bs_sum$rsq[rsq_max]
plot(data_bs_sum$rsq, xlab = "Number of variables", ylab = "RSQ", col = "green",
type = "b", pch = 20)
points(rsq_max, data_bs_sum$rsq[rsq_max], col = "red", pch = 9)
adjr_max <- which.max(data_bs_sum$adjr)
adjr_max
data_bs_sum$adjr[adjr_max]
plot(data_bs_sum$adjr, xlab = "Number of variables", ylab = "ADJR", col = "green",
type = "b", pch = 20)
points(adjr_max, data_bs_sum$adjr[adjr_max], col = "red", pch = 9)
cp_min <- which.min(data_bs_sum$cp)
cp_min
data_bs_sum$cp[cp_min]
plot(data_bs_sum$cp, xlab = "Number of variables", ylab = "CP", col = "green",
type = "b", pch = 20)
points(cp_min, data_bs_sum$cp[cp_min], col = "red", pch = 9)
plot(data_bs, scale = "bic")
coef(data_bs, id = 12)
data_fwd <- regsubsets(Life.expectancy ~ .,data = data[,-20], nvmax = 15, method = "forward")
data_sum_fwd <- summary(data_fwd)
data_sum_fwd
data_fwd <- regsubsets(Life.expectancy ~ .,data = data[,-20], nvmax = 15, method = "forward")
data_sum_fwd <- summary(data_fwd)
with(data_sum_fwd, data.frame(rsq, adjr2, cp, rss, outmat))
data_bwd <- regsubsets(Life.expectancy ~ .,data = data[,-20], nvmax = 15, method = "forward")
data_sum_bwd <- summary(data_bwd)
with(data_sum_bwd, data.frame(rsq, adjr2, cp, rss, outmat))
bic_min <- which.min(data_sum_fwd$bic)
bic_min
data_sum_fwd$bic[bic_min]
plot(data_sum_fwd$bic, xlab = "Number of variables", ylab = "BIC", col = "green",
type = "b", pch = 20)
points(bic_min, data_sum_fwd$bic[bic_min], col = "red", pch = 9)
#RSQ
cp_min <- which.min(data_sum_fwd$cp)
cp_min
data_sum_fwd$cp[cp_min]
plot(data_sum_fwd$cp, xlab = "Number of variables", ylab = "CP", col = "green",
type = "b", pch = 20)
points(cp_min, data_sum_fwd$cp[cp_min], col = "red", pch = 9)
#AJDR
adjr_max <- which.max(data_sum_fwd$adjr)
adjr_max
data_sum_fwd$adjr[adjr_max]
plot(data_sum_fwd$adjr, xlab = "Number of variables", ylab = "ADJR", col = "green",
type = "b", pch = 20)
points(adjr_max, data_sum_fwd$adjr[adjr_max], col = "red", pch = 9)
# BIC
bic_min <- which.min(data_sum_bwd$bic)
bic_min
data_sum_bwd$bic[bic_min]
plot(data_sum_bwd$bic, xlab = "Number of variables", ylab = "BIC", col = "green",
type = "b", pch = 20)
points(bic_min, data_sum_bwd$bic[bic_min], col = "red", pch = 9)
#RSQ
cp_min <- which.min(data_sum_bwd$cp)
cp_min
data_sum_bwd$cp[cp_min]
plot(data_sum_bwd$cp, xlab = "Number of variables", ylab = "CP", col = "green",
type = "b", pch = 20)
points(cp_min, data_sum_bwd$cp[cp_min], col = "red", pch = 9)
#AJDR
adjr_max <- which.max(data_sum_bwd$adjr)
adjr_max
data_sum_bwd$adjr[adjr_max]
plot(data_sum_bwd$adjr, xlab = "Number of variables", ylab = "ADJR", col = "green",
type = "b", pch = 20)
points(adjr_max, data_sum_bwd$adjr[adjr_max], col = "red", pch = 9)
#AJDR
adjr_max <- which.max(data_sum_fwd$adjr)
adjr_max
data_sum_fwd$adjr[adjr_max]
plot(data_sum_fwd$adjr, xlab = "Number of variables", ylab = "ADJR", col = "green",
type = "b", pch = 20)
points(adjr_max, data_sum_fwd$adjr[adjr_max], col = "red", pch = 9)
data_fwd <- regsubsets(Life.expectancy ~ .,data = data[,-20], nvmax = 15, method = "forward")
data_sum_fwd <- summary(data_fwd)
with(data_sum_fwd, data.frame(rsq, adjr2, cp, rss, outmat))
# BIC
bic_min <- which.min(data_sum_fwd$bic)
bic_min
data_sum_fwd$bic[bic_min]
plot(data_sum_fwd$bic, xlab = "Number of variables", ylab = "BIC", col = "green",
type = "b", pch = 20)
points(bic_min, data_sum_fwd$bic[bic_min], col = "red", pch = 9)
#RSQ
cp_min <- which.min(data_sum_fwd$cp)
cp_min
data_sum_fwd$cp[cp_min]
plot(data_sum_fwd$cp, xlab = "Number of variables", ylab = "CP", col = "green",
type = "b", pch = 20)
points(cp_min, data_sum_fwd$cp[cp_min], col = "red", pch = 9)
#RSQ
cp_min <- which.min(data_sum_fwd$cp)
cp_min
data_sum_fwd$cp[cp_min]
plot(data_sum_fwd$cp, xlab = "Number of variables", ylab = "CP", col = "green",
type = "b", pch = 20)
points(cp_min, data_sum_fwd$cp[cp_min], col = "red", pch = 9)
#AJDR
adjr_max <- which.max(data_sum_fwd$adjr)
adjr_max
data_sum_fwd$adjr[adjr_max]
plot(data_sum_fwd$adjr, xlab = "Number of variables", ylab = "ADJR", col = "green",
type = "b", pch = 20)
points(adjr_max, data_sum_fwd$adjr[adjr_max], col = "red", pch = 9)
data_bwd <- regsubsets(Life.expectancy ~ .,data = data[,-20], nvmax = 15, method = "backward")
data_sum_bwd <- summary(data_bwd)
with(data_sum_bwd, data.frame(rsq, adjr2, cp, rss, outmat))
# BIC
bic_min <- which.min(data_sum_bwd$bic)
bic_min
data_sum_bwd$bic[bic_min]
plot(data_sum_bwd$bic, xlab = "Number of variables", ylab = "BIC", col = "green",
type = "b", pch = 20)
points(bic_min, data_sum_bwd$bic[bic_min], col = "red", pch = 9)
#RSQ
cp_min <- which.min(data_sum_bwd$cp)
cp_min
data_sum_bwd$cp[cp_min]
plot(data_sum_bwd$cp, xlab = "Number of variables", ylab = "CP", col = "green",
type = "b", pch = 20)
points(cp_min, data_sum_bwd$cp[cp_min], col = "red", pch = 9)
#AJDR
adjr_max <- which.max(data_sum_bwd$adjr)
adjr_max
data_sum_bwd$adjr[adjr_max]
plot(data_sum_bwd$adjr, xlab = "Number of variables", ylab = "ADJR", col = "green",
type = "b", pch = 20)
points(adjr_max, data_sum_bwd$adjr[adjr_max], col = "red", pch = 9)
#RSQ
cp_min <- which.min(data_sum_bwd$cp)
cp_min
data_sum_bwd$cp[cp_min]
plot(data_sum_bwd$cp, xlab = "Number of variables", ylab = "CP", col = "green",
type = "b", pch = 20)
points(cp_min, data_sum_bwd$cp[cp_min], col = "red", pch = 9)
data_bs <- regsubsets(Life.expectancy ~ .,data = data[,-20], nvmax = 15, method = "exhaustive")
data_bs_sum <- summary(data_bs)
with(data_bs_sum, data.frame(rsq, adjr2, cp, rss, outmat))
#chcemy większe rsq, adjr2 oraz mniejsze cp, rss
#chcemy jak najmniejsze BIC i AIC
data_bs <- regsubsets(Life.expectancy ~ .,data = data[,-20], nvmax = 18, method = "exhaustive")
data_bs_sum <- summary(data_bs)
with(data_bs_sum, data.frame(rsq, adjr2, cp, rss, outmat))
#chcemy większe rsq, adjr2 oraz mniejsze cp, rss
#chcemy jak najmniejsze BIC i AIC
bic_min <- which.min(data_bs_sum$bic)
bic_min
data_bs_sum$bic[bic_min]
plot(data_bs_sum$bic, xlab = "Number of variables", ylab = "BIC", col = "green",
type = "b", pch = 20)
points(bic_min, data_bs_sum$bic[bic_min], col = "red", pch = 9)
rsq_max <- which.max(data_bs_sum$rsq)
rsq_max
data_bs_sum$rsq[rsq_max]
plot(data_bs_sum$rsq, xlab = "Number of variables", ylab = "RSQ", col = "green",
type = "b", pch = 20)
points(rsq_max, data_bs_sum$rsq[rsq_max], col = "red", pch = 9)
adjr_max <- which.max(data_bs_sum$adjr)
adjr_max
data_bs_sum$adjr[adjr_max]
plot(data_bs_sum$adjr, xlab = "Number of variables", ylab = "ADJR", col = "green",
type = "b", pch = 20)
points(adjr_max, data_bs_sum$adjr[adjr_max], col = "red", pch = 9)
cp_min <- which.min(data_bs_sum$cp)
cp_min
data_bs_sum$cp[cp_min]
plot(data_bs_sum$cp, xlab = "Number of variables", ylab = "CP", col = "green",
type = "b", pch = 20)
points(cp_min, data_bs_sum$cp[cp_min], col = "red", pch = 9)
coef(data_bs, id = 12)
data_fwd <- regsubsets(Life.expectancy ~ .,data = data[,-20], nvmax = 15, method = "forward")
data_sum_fwd <- summary(data_fwd)
with(data_sum_fwd, data.frame(rsq, adjr2, cp, rss, outmat))
data_fwd <- regsubsets(Life.expectancy ~ .,data = data[,-20], nvmax = 18, method = "forward")
data_sum_fwd <- summary(data_fwd)
with(data_sum_fwd, data.frame(rsq, adjr2, cp, rss, outmat))
# BIC
bic_min <- which.min(data_sum_fwd$bic)
bic_min
data_sum_fwd$bic[bic_min]
plot(data_sum_fwd$bic, xlab = "Number of variables", ylab = "BIC", col = "green",
type = "b", pch = 20)
points(bic_min, data_sum_fwd$bic[bic_min], col = "red", pch = 9)
# BIC
bic_min <- which.min(data_sum_fwd$bic)
bic_min
data_sum_fwd$bic[bic_min]
plot(data_sum_fwd$bic, xlab = "Number of variables", ylab = "BIC", col = "green",
type = "b", pch = 20)
points(bic_min, data_sum_fwd$bic[bic_min], col = "red", pch = 9)
#RSQ
cp_min <- which.min(data_sum_fwd$cp)
cp_min
data_sum_fwd$cp[cp_min]
plot(data_sum_fwd$cp, xlab = "Number of variables", ylab = "CP", col = "green",
type = "b", pch = 20)
points(cp_min, data_sum_fwd$cp[cp_min], col = "red", pch = 9)
data_bwd <- regsubsets(Life.expectancy ~ .,data = data[,-20], nvmax = 15, method = "backward")
data_sum_bwd <- summary(data_bwd)
with(data_sum_bwd, data.frame(rsq, adjr2, cp, rss, outmat))
# BIC
bic_min <- which.min(data_sum_bwd$bic)
bic_min
data_sum_bwd$bic[bic_min]
plot(data_sum_bwd$bic, xlab = "Number of variables", ylab = "BIC", col = "green",
type = "b", pch = 20)
points(bic_min, data_sum_bwd$bic[bic_min], col = "red", pch = 9)
#RSQ
cp_min <- which.min(data_sum_bwd$cp)
cp_min
data_sum_bwd$cp[cp_min]
plot(data_sum_bwd$cp, xlab = "Number of variables", ylab = "CP", col = "green",
type = "b", pch = 20)
points(cp_min, data_sum_bwd$cp[cp_min], col = "red", pch = 9)
#AJDR
adjr_max <- which.max(data_sum_bwd$adjr)
adjr_max
data_sum_bwd$adjr[adjr_max]
plot(data_sum_bwd$adjr, xlab = "Number of variables", ylab = "ADJR", col = "green",
type = "b", pch = 20)
points(adjr_max, data_sum_bwd$adjr[adjr_max], col = "red", pch = 9)
